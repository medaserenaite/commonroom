// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using commonroom.Models;

namespace commonroom.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("commonroom.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CommentText");

                    b.Property<string>("CommentTheme");

                    b.Property<int>("TripID");

                    b.Property<int>("UserID");

                    b.HasKey("CommentID");

                    b.HasIndex("TripID");

                    b.HasIndex("UserID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("commonroom.Models.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryName");

                    b.Property<int>("UserID");

                    b.HasKey("CountryID");

                    b.HasIndex("UserID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("commonroom.Models.SavedTrip", b =>
                {
                    b.Property<int>("SavedTripID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SavedTripName");

                    b.Property<int>("TripID");

                    b.Property<int>("UserID");

                    b.HasKey("SavedTripID");

                    b.HasIndex("TripID");

                    b.HasIndex("UserID");

                    b.ToTable("SavedTrips");
                });

            modelBuilder.Entity("commonroom.Models.Trip", b =>
                {
                    b.Property<int>("TripID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("About");

                    b.Property<int>("CountryID");

                    b.Property<string>("End");

                    b.Property<int>("Length");

                    b.Property<string>("Middle");

                    b.Property<string>("Start");

                    b.Property<string>("TripName");

                    b.Property<int>("UserID");

                    b.HasKey("TripID");

                    b.HasIndex("CountryID");

                    b.HasIndex("UserID");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("commonroom.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("commonroom.Models.Comment", b =>
                {
                    b.HasOne("commonroom.Models.Trip", "Trip")
                        .WithMany("Comments")
                        .HasForeignKey("TripID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("commonroom.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("commonroom.Models.Country", b =>
                {
                    b.HasOne("commonroom.Models.User", "User")
                        .WithMany("Countries")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("commonroom.Models.SavedTrip", b =>
                {
                    b.HasOne("commonroom.Models.Trip", "Trip")
                        .WithMany()
                        .HasForeignKey("TripID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("commonroom.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("commonroom.Models.Trip", b =>
                {
                    b.HasOne("commonroom.Models.Country", "Country")
                        .WithMany("Trips")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("commonroom.Models.User", "User")
                        .WithMany("Trips")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
